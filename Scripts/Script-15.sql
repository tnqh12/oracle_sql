--PROCEDURE(프로시져)

--익명 프로시져, 저장(네임드)프로시져
DROP PROCEDURE PROC_PRINT_PERSON;

CREATE OR REPLACE PROCEDURE PROC_PRINT_PERSON
IS
V_PNAME PERSON.PNAME%TYPE;
V_PAGE PERSON.PAGE%TYPE;
BEGIN
	SELECT PNAME,PAGE INTO V_PNAME, V_PAGE
	FROM PERSON;
	DBMS_OUTPUT.PUT_LINE(V_PNAME||' '||V_PAGE);
END;

BEGIN
	PROC_PRINT_PERSON;
END;









-- TRIGGER(트리거)

DROP TABLE TR;
DROP TABLE TR_LOG;
DROP SEQUENCE SEQ_TR;
DROP SEQUENCE SEQ_TR_LOG;

--트리거용 테스트 테이블
CREATE TABLE TR(
 TRNO NUMBER PRIMARY KEY,
 TRCONT VARCHAR2(200)
);

--시퀀스
CREATE SEQUENCE SEQ_TR;

--로그 테이블

CREATE TABLE TR_LOG(
	LOGNO NUMBER PRIMARY KEY,
	TNAME VARCHAR2(20), -- 테이블명
	DML VARCHAR2(20), -- 컬럼명
	OLDCONT VARCHAR2(200), -- 기존 데이터
	NEWCONT VARCHAR2(200), -- 신규데이터
	LOGDATE DATE --로그일시
);

--시퀀스

CREATE SEQUENCE SEQ_TR_LOG;



--트리거

CREATE OR REPLACE TRIGGER TRG_TR
BEFORE
INSERT OR UPDATE OR DELETE ON TR
FOR EACH ROW 
BEGIN 
	IF INSERTING THEN
	INSERT INTO TR_LOG
	VALUES(SEQ_TR_LOG.NEXTVAL,'TR','INSERT',:OLD.TRCONT,:NEW.TRCONT,SYSDATE);

	ELSIF UPDATING THEN
	INSERT INTO TR_LOG
	VALUES(SEQ_TR_LOG.NEXTVAL,'TR','UPDATE',:OLD.TRCONT,:NEW.TRCONT,SYSDATE);

	ELSIF DELETING THEN
	INSERT INTO TR_LOG
	VALUES(SEQ_TR_LOG.NEXTVAL,'TR','DELETE',:OLD.TRCONT,:NEW.TRCONT,SYSDATE);
END IF;
END;

SELECT * FROM TR;
SELECT * FROM TR_LOG;


INSERT INTO TR VALUES(SEQ_TR.NEXTVAL,'3번 컨텐츠');
COMMIT;

UPDATE TR SET TRCONT='수정된 1번 컨텐츠'WHERE TRNO = 1;

DELETE TR WHERE TRNO =2;
















