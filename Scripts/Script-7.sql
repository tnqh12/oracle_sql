-- join / SUBQUERY 

SELECT * FROM EMPLOYEES;
SELECT *FROM JOBS;
SELECT *FROM JOB_HISTORY;
SELECT *FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM COUNTRIES;
SELECT * FROM REGIONS;

-- 1. 직원의 풀네임과 부서명 조회
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
D.DEPARTMENT_NAME AS "부서명"
FROM EMPLOYEES E ,DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;



-- 2. 각 직원의 풀네임, 직무ID 직무명 최대급여의 최소 급여의 차이
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
J.JOB_ID AS "직무ID",
J.JOB_TITLE AS "직무명",
J.MAX_SALARY - J.MIN_SALARY AS "급여의 차이" 
FROM EMPLOYEES E , JOBS J
WHERE  E.JOB_ID = J.JOB_ID;

-- 3. 2006년에 일을 한 직원의 풀네임과 작업 시작일, 작업 종료일 조회

SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
JH.START_DATE AS "작업시작일",
JH.END_DATE AS "작업 종료일"
FROM EMPLOYEES E , JOB_HISTORY JH
WHERE  E.JOB_ID = JH.JOB_ID
 		AND JH.START_DATE BETWEEN TO_DATE('2006/01/01', 'YYYY/MM/DD') 
 		AND TO_DATE('2006/12/31', 'YYYY/MM/DD');


-- 4. 풀네임이 D로 시작하는 직원들중 JOB_ID가 IT_PROG인 직원들의 아이디와 풀네임, 직무명을 조회
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
J.JOB_TITLE AS "직무명"
FROM EMPLOYEES E , JOBS J
WHERE E.JOB_ID = J.JOB_ID
		AND J.JOB_ID LIKE 'IT_PROG'
		AND E.FIRST_NAME LIKE 'D%';
	
-- 5. 직원 중 부서아이디가 20 또는 50인 직원들의 아이디와 풀네임, 부서아이디, 부서명을 조회

SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
D.DEPARTMENT_NAME AS "부서명",
D.DEPARTMENT_ID AS "부서ID"
FROM EMPLOYEES E ,DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND D.DEPARTMENT_ID = ANY(20,50);
	
-- 6. 직원 중 부서아이디가 3의 배수인 직원들의 아이디, 풀네임, 부서아이디, 부서명을 조회
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
D.DEPARTMENT_NAME AS "부서명",
D.DEPARTMENT_ID AS "부서ID"
FROM EMPLOYEES E ,DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND MOD(E.DEPARTMENT_ID,3) = 0;
	
	
	

-- 7. 직원아이디가 100인 직원과 같은 부서에 근무하는 직원들의
--     직원아이디, 풀네임, 부서아이디, 부서명을 조회
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
D.DEPARTMENT_ID AS "부서ID",
J.JOB_TITLE AS "직무명"
FROM EMPLOYEES E , JOBS J , DEPARTMENTS D
WHERE E.JOB_ID = J.JOB_ID AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND E.EMPLOYEE_ID = ANY(100);
	
-- 8. 부서명이 M로 시작하는 부서에 근무하는 직원들의
--     직원아이디, 풀네임, 부서아이디, 부서명을 조회
SELECT
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
D.DEPARTMENT_ID AS "부서ID",
D.DEPARTMENT_NAME AS "부서명"
FROM EMPLOYEES E , JOBS J , DEPARTMENTS D
WHERE E.JOB_ID = J.JOB_ID AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND D.DEPARTMENT_NAME LIKE 'M%';
	
	

-- 9. 직무아이디가 IT_PROG인 직원들 중 최소월급을 받는 사람과
--       최대월급을 받는 사람의 직원아이디, 풀네임, 부서명, 월급을 조회
SELECT
E.FIRST_NAME|| '_'|| E.LAST_NAME AS "풀네임",
E.EMPLOYEE_ID AS "직원ID",
D.DEPARTMENT_NAME AS "부서명",
E.SALARY AS "월급"
FROM EMPLOYEES E, JOBS J, DEPARTMENTS D
WHERE E.JOB_ID = J.JOB_ID AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND
		E.SALARY = ANY((SELECT MAX(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG'),
			(SELECT MIN(SALARY) FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG'));
	
	
	

-- 10. 모든 직원의 직원아이디, 풀네임, 부서명, 커미션이 포함된 월급을 조회
--       (단, 커미션퍼센트가 NULL인 경우는 제외, 커미션은 월급*커미션포인트)
SELECT
E.EMPLOYEE_ID AS "직원ID",
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
D.DEPARTMENT_NAME AS "부서명",
E.SALARY * COMMISSION_PCT AS "커미션*월급"
FROM EMPLOYEES E, JOBS J, DEPARTMENTS D
WHERE E.JOB_ID = J.JOB_ID AND E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND COMMISSION_PCT IS NOT NULL;
	
	
	

-- 11. 커미션퍼센트가 NULL인 직원들이 근무하는 부서별로
--      부서아이디, 부서명, 부서직원들의 커미션이 포함된 월급의 합계를 조회
--      (단, 커미션퍼센트가 NULL인 경우는 제외, 커미션은 월급*커미션포인트)
SELECT
D.DEPARTMENT_ID  AS "부서ID",
D.DEPARTMENT_NAME AS "부서명",
SUM(E.SALARY + E.SALARY * NVL(E.COMMISSION_PCT,0)) AS "커미션*월급합계"
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND COMMISSION_PCT IS NULL
GROUP BY D.DEPARTMENT_ID , D.DEPARTMENT_NAME;
	

-- 12. 최대급여와 최소급여의 차가 가장 큰 직무를 수행하는 직원들의
--      직무아이디, 직무명, 직원아이디, 풀네임을 조회

SELECT
J.JOB_ID AS "직무ID",
J.JOB_TITLE AS "직무명",
E.EMPLOYEE_ID AS "직원ID",
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임",
J.MAX_SALARY - J.MIN_SALARY AS "급여차이" 
FROM EMPLOYEES E , JOBS J
WHERE  E.JOB_ID = J.JOB_ID
	AND	 J.MAX_SALARY - J.MIN_SALARY = (SELECT MAX(MAX_SALARY - MIN_SALARY) FROM JOBS);

-- 13. 직무수행시간(END_DATE - START_DATE)이 가장 길었던 직무를 수행했던 부서에
--      근무하는 직원들의 직무아이디, 직무명, 부서명, 직원아이디, 풀네임을 조회

SELECT
J.JOB_ID AS "직무ID",
J.JOB_TITLE AS "직무명",
D.DEPARTMENT_NAME AS "부서명",
E.EMPLOYEE_ID AS "직원ID",
E.FIRST_NAME|| '_' ||E.LAST_NAME AS "풀네임",
JH.END_DATE - JH.START_DATE AS "직무 기간"
FROM EMPLOYEES E , JOB_HISTORY JH, DEPARTMENTS D, JOBS J
WHERE  		JH.JOB_ID = J.JOB_ID  AND D.DEPARTMENT_ID = E.DEPARTMENT_ID 
AND	JH.END_DATE - JH.START_DATE = (SELECT MAX(END_DATE - START_DATE)FROM JOB_HISTORY);
		





-- 14. 시애틀(Seattle)에 있는 부서에 근무하는 모든 직원들의
--      부서아이디, 부서명, 직원아이디, 풀네임을 조회
	
SELECT
D.DEPARTMENT_ID AS "부서ID",
D.DEPARTMENT_NAME AS "부서명",
E.EMPLOYEE_ID AS "직원ID",
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임"
FROM EMPLOYEES E, DEPARTMENTS D ,LOCATIONS L
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
		AND L.CITY = 'Seattle';
	
	
-- 15. 유럽(Europe)에 있는 도시들에 있는 모든 부서에 근무하는 직원들의
--      도시명, 부서아이디, 부서명, 직원아이디, 풀네임을 조회
SELECT
L.CITY AS "도시명",
D.DEPARTMENT_ID AS "부서ID",
D.DEPARTMENT_NAME AS "부서명",
E.EMPLOYEE_ID AS "직원ID",
E.FIRST_NAME|| '_'||E.LAST_NAME AS "풀네임"
FROM EMPLOYEES E, DEPARTMENTS D ,LOCATIONS L, COUNTRIES C, REGIONS R
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID 
		AND L.LOCATION_ID = D.LOCATION_ID 
		AND C.COUNTRY_ID = L.COUNTRY_ID
		AND R.REGION_ID = C.REGION_ID
		AND R.REGION_NAME = 'Europe';
	
	
SELECT *FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;
SELECT * FROM COUNTRIES;
SELECT * FROM REGIONS;
	
	
	

-- 16. 유럽(Europe)에 위치하고 있는 부서들 중 직원수가 가장 많은 부서의
--      도시명, 부서아이디, 부서명, 직원수를 조회
SELECT *
FROM (
SELECT
L.CITY AS "도시명", D.DEPARTMENT_ID AS "부서ID", D.DEPARTMENT_NAME AS "부서명", MAX(E.EMPLOYEE_ID) MAX_EID
FROM EMPLOYEES E, DEPARTMENTS D ,LOCATIONS L, COUNTRIES C, REGIONS R
WHERE 	D.DEPARTMENT_ID = E.DEPARTMENT_ID 
		AND L.LOCATION_ID = D.LOCATION_ID 
		AND C.COUNTRY_ID = L.COUNTRY_ID
		AND R.REGION_ID = C.REGION_ID
		AND R.REGION_NAME = 'Europe'
GROUP BY L.CITY, D.DEPARTMENT_ID, D.DEPARTMENT_NAME 
ORDER BY MAX_EID DESC 
)
WHERE ROWNUM = 1;
	